{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Administrator.BOLORMAA\\\\Documents\\\\mhd\\\\trydjango\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Administrator.BOLORMAA\\\\Documents\\\\mhd\\\\trydjango\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Administrator.BOLORMAA\\\\Documents\\\\mhd\\\\trydjango\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Administrator.BOLORMAA\\\\Documents\\\\mhd\\\\trydjango\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Administrator.BOLORMAA\\\\Documents\\\\mhd\\\\trydjango\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Administrator.BOLORMAA\\\\Documents\\\\mhd\\\\trydjango\\\\frontend\\\\gui\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Administrator.BOLORMAA\\\\Documents\\\\mhd\\\\trydjango\\\\frontend\\\\gui\\\\src\\\\containers\\\\Daatgal\\\\Vehicle\\\\Vehicle.js\";\nimport React from 'react';\nimport classes from './Vehicle.module.css';\nimport { faYarn } from '@fortawesome/free-brands-svg-icons';\n\nvar Vehicle =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Vehicle, _React$Component);\n\n  function Vehicle() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Vehicle);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Vehicle)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      selectedTab: 1,\n      vehicleForm: {\n        countryNumber: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Улсын дугаар'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        arliinNumber: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Арлын дугаар'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        Manufacturer: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Manufacturer'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        model: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Model'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        variant: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Variant'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 5,\n            maxLength: 5\n          },\n          valid: false,\n          touched: false\n        },\n        regYear: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Reg Year'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 4,\n            maxLength: 4,\n            isNumeric: true\n          },\n          valid: false,\n          touched: false\n        },\n        mnRegYear: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Mn Reg Year'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 4,\n            maxLength: 4,\n            isNumeric: true\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      userForm: {\n        surname: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Овог'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 1,\n            maxLength: 20\n          },\n          valid: false,\n          touched: false\n        },\n        firstname: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Нэр'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 1,\n            maxLength: 20\n          },\n          valid: false,\n          touched: false\n        },\n        registrationNumber: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Регистерийн дугаар'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 10,\n            maxLength: 10,\n            isRegistrationNumber: true\n          },\n          valid: false,\n          touched: false\n        },\n        phoneNumber: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Утасны дугаар'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 8,\n            maxLength: 8,\n            isNumeric: true\n          },\n          valid: false,\n          touched: false\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Имэйл хаяг'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      generalForm: {\n        agreeCheck: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'checkbox',\n            checked: false,\n            placeholder: 'I agree with the Terms and Conditions'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isChecked: true\n          },\n          valid: false,\n          touched: false\n        }\n      }\n    };\n\n    _this.listHandler = function (num) {\n      _this.setState({\n        selectedTab: num\n      });\n    };\n\n    _this.checkValidity = function (value, rule) {\n      if (!rule) {\n        return true;\n      }\n\n      var isValid = true;\n\n      if (rule.required) {\n        if (rule.maxLength) {\n          isValid = isValid && value.length <= rule.maxLength;\n        }\n\n        if (rule.minLength) {\n          isValid = isValid && value.length >= rule.minLength;\n        }\n\n        if (rule.isNumeric) {\n          var pattern = /^(0|[1-9][0-9]*)$/;\n          isValid = pattern.test(value) && isValid;\n        }\n\n        if (rule.isEmail) {\n          var _pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          isValid = _pattern.test(value) & isValid;\n        }\n\n        if (rule.isRegistrationNumber) {\n          var _pattern2 = /^[A-ЯҮӨа-яүө]{2}[0-9]{8}$/;\n          isValid = _pattern2.test(value) & isValid;\n        }\n      }\n\n      return isValid;\n    };\n\n    _this.onChangeHandler = function (event, id) {\n      var tempForm = null;\n\n      if (_this.state.selectedTab === 1) {\n        tempForm = _objectSpread({}, _this.state.vehicleForm);\n        tempForm[id].value = event.target.value;\n        tempForm[id].valid = _this.checkValidity(event.target.value, tempForm[id].validation);\n        tempForm[id].touched = true;\n        console.log(tempForm[id].valid);\n\n        _this.setState({\n          vehicleForm: tempForm\n        });\n      } else if (_this.state.selectedTab === 2) {\n        tempForm = _objectSpread({}, _this.state.userForm);\n        tempForm[id].value = event.target.value;\n        tempForm[id].valid = _this.checkValidity(event.target.value, tempForm[id].validation);\n        tempForm[id].touched = true;\n\n        _this.setState({\n          userForm: tempForm\n        });\n      } else {\n        tempForm = _objectSpread({}, _this.state.generalForm);\n        tempForm[id].elementConfig.checked = !tempForm[id].elementConfig.checked;\n        tempForm[id].touched = true;\n        tempForm[id].valid = tempForm[id].elementConfig.checked ? true : false;\n\n        _this.setState({\n          generalForm: tempForm\n        });\n\n        console.log(_this.state.generalForm.agreeCheck.elementConfig.checked);\n      }\n    };\n\n    _this.onSubmit = function () {\n      //event.preventDefaults();\n      var tempForm = null;\n\n      if (_this.state.selectedTab === 1) {\n        tempForm = _objectSpread({}, _this.state.vehicleForm);\n        var isValid = true;\n\n        for (var id in tempForm) {\n          isValid = tempForm[id].valid && isValid;\n          tempForm[id].touched = true;\n        }\n\n        _this.setState({\n          vehicleForm: tempForm\n        });\n\n        console.log(isValid);\n\n        if (isValid) {\n          _this.listHandler(2);\n        }\n      } else if (_this.state.selectedTab === 2) {\n        tempForm = _objectSpread({}, _this.state.userForm);\n        var _isValid = true;\n\n        for (var _id in tempForm) {\n          _isValid = tempForm[_id].valid && _isValid;\n        }\n\n        if (_isValid) {\n          _this.listHandler(3);\n        } else {\n          for (var _id2 in tempForm) {\n            tempForm[_id2].touched = true;\n          }\n\n          _this.setState({\n            userForm: tempForm\n          });\n        }\n      } else {\n        tempForm = _objectSpread({}, _this.state.generalForm);\n        var _isValid2 = true;\n\n        for (var _id3 in tempForm) {\n          _isValid2 = tempForm[_id3].valid && _isValid2;\n        }\n\n        if (_isValid2) {\n          _this.props.history.push('/');\n        } else {// to do something when checkbox is not checked\n        }\n      }\n    };\n\n    _this.prevClicked = function () {\n      if (_this.state.selectedTab === 1) {} else if (_this.state.selectedTab === 2) {\n        _this.listHandler(1);\n      } else {\n        _this.listHandler(2);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Vehicle, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var loadingPosition = this.state.selectedTab === 1 ? '40%' : this.state.selectedTab === 2 ? '70%' : '100%';\n      var formElements = null;\n\n      if (this.state.selectedTab === 1) {\n        formElements = _objectSpread({}, this.state.vehicleForm);\n      } else if (this.state.selectedTab === 2) {\n        formElements = _objectSpread({}, this.state.userForm);\n      } else {\n        formElements = _objectSpread({}, this.state.generalForm);\n      }\n\n      var elementFormList = [];\n\n      for (var i in formElements) {\n        elementFormList.push({\n          id: i,\n          config: formElements[i]\n        });\n      }\n\n      return React.createElement(\"div\", {\n        className: classes.Vehicle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.Tab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this2.listHandler(1);\n        },\n        className: this.state.selectedTab === 1 ? classes.SelectedTab : classes.UnselectedTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-account-circle mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 355\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.TabText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }, \"\\u0422\\u044D\\u044D\\u0432\\u0440\\u0438\\u0439\\u043D \\u0445\\u044D\\u0440\\u044D\\u0433\\u0441\\u043B\\u0438\\u0439\\u043D \\u043C\\u044D\\u0434\\u044D\\u044D\\u043B\\u044D\\u043B\")), React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this2.listHandler(2);\n        },\n        className: this.state.selectedTab === 2 ? classes.SelectedTab : classes.UnselectedTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-face-profile mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.TabText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0430\\u0442\\u0433\\u0443\\u0443\\u043B\\u0430\\u0433\\u0447\\u0438\\u0439\\u043D \\u043C\\u044D\\u0434\\u044D\\u044D\\u043B\\u044D\\u043B\")), React.createElement(\"li\", {\n        onClick: function onClick() {\n          return _this2.listHandler(3);\n        },\n        className: this.state.selectedTab === 3 ? classes.SelectedTab : classes.UnselectedTab,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"mdi mdi-checkbox-marked-circle-outline mr-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.TabText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369\n        },\n        __self: this\n      }, \"\\u0415\\u0440\\u04E9\\u043D\\u0445\\u0438\\u0439 \\u043C\\u044D\\u0434\\u044D\\u044D\\u043B\\u044D\\u043B\"))), React.createElement(\"div\", {\n        className: classes.VehicleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: [classes.lines, classes.stripesLoader].join(' '),\n        style: {\n          backgroundPosition: loadingPosition\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      })), React.createElement(\"form\", {\n        className: this.state.selectedTab === 3 ? classes.formReg : classes.formGeneral,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, this.state.selectedTab === 3 ? elementFormList.map(function (igkey) {\n        return React.createElement(\"div\", {\n          key: igkey.id,\n          className: classes.formElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: igkey.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 385\n          },\n          __self: this\n        }, igkey.config.elementConfig.placeholder), React.createElement(\"input\", {\n          className: classes.textInput,\n          type: igkey.config.elementConfig.type,\n          placeholder: igkey.config.elementConfig.placeholder,\n          onChange: function onChange(event) {\n            return _this2.onChangeHandler(event, igkey.id);\n          },\n          checked: igkey.config.elementConfig.checked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 386\n          },\n          __self: this\n        }));\n      }) : elementFormList.map(function (igkey) {\n        return React.createElement(\"div\", {\n          key: igkey.id,\n          className: classes.formElement,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 400\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          htmlFor: igkey.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 401\n          },\n          __self: this\n        }, igkey.config.elementConfig.placeholder), React.createElement(\"input\", {\n          className: [classes.textInput, igkey.config.valid && igkey.config.touched ? classes.textInputSuccess : !igkey.config.valid && igkey.config.touched ? classes.textInputDanger : null].join(' '),\n          type: igkey.config.elementConfig.type,\n          placeholder: igkey.config.elementConfig.placeholder,\n          onChange: function onChange(event) {\n            return _this2.onChangeHandler(event, igkey.id);\n          },\n          value: igkey.config.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 402\n          },\n          __self: this\n        }), !igkey.config.valid && igkey.config.touched ? React.createElement(\"strong\", {\n          className: \"mdi mdi-close\",\n          style: {\n            color: 'red',\n            fontSize: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409\n          },\n          __self: this\n        }) : null, igkey.config.valid && igkey.config.touched ? React.createElement(\"strong\", {\n          className: \"mdi mdi-check\",\n          style: {\n            color: 'green',\n            fontSize: '20px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          },\n          __self: this\n        }) : null);\n      })), React.createElement(\"div\", {\n        className: classes.prevNextcont,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: classes.Prev,\n        onClick: this.prevClicked,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, \"Prev\"), React.createElement(\"button\", {\n        className: classes.Next,\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, \"Next\"))));\n    }\n  }]);\n\n  return Vehicle;\n}(React.Component);\n\nexport default Vehicle;","map":{"version":3,"sources":["C:\\Users\\Administrator.BOLORMAA\\Documents\\mhd\\trydjango\\frontend\\gui\\src\\containers\\Daatgal\\Vehicle\\Vehicle.js"],"names":["React","classes","faYarn","Vehicle","state","selectedTab","vehicleForm","countryNumber","elementType","elementConfig","type","placeholder","value","validation","required","minLength","maxLength","valid","touched","arliinNumber","Manufacturer","model","variant","regYear","isNumeric","mnRegYear","userForm","surname","firstname","registrationNumber","isRegistrationNumber","phoneNumber","email","isEmail","generalForm","agreeCheck","checked","isChecked","listHandler","num","setState","checkValidity","rule","isValid","length","pattern","test","onChangeHandler","event","id","tempForm","target","console","log","onSubmit","props","history","push","prevClicked","loadingPosition","formElements","elementFormList","i","config","Tab","SelectedTab","UnselectedTab","TabText","VehicleContainer","lines","stripesLoader","join","backgroundPosition","formReg","formGeneral","map","igkey","formElement","textInput","textInputSuccess","textInputDanger","color","fontSize","prevNextcont","Prev","Next","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport classes from './Vehicle.module.css';\r\nimport { faYarn } from '@fortawesome/free-brands-svg-icons';\r\nclass Vehicle extends React.Component{\r\n    state = {\r\n        selectedTab: 1, \r\n        vehicleForm: {\r\n            countryNumber:{\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Улсын дугаар'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 5, \r\n                    maxLength: 5\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n                }, \r\n            arliinNumber: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Арлын дугаар'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 5, \r\n                    maxLength: 5\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }, \r\n            Manufacturer: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Manufacturer'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 5, \r\n                    maxLength: 5\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            },\r\n            model: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Model'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 5, \r\n                    maxLength: 5\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }, \r\n            variant: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Variant'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 5, \r\n                    maxLength: 5\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }, \r\n            regYear: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Reg Year'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 4, \r\n                    maxLength: 4, \r\n                    isNumeric: true\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }, \r\n            mnRegYear: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Mn Reg Year'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 4, \r\n                    maxLength: 4, \r\n                    isNumeric: true\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }\r\n        }, \r\n        userForm: {\r\n            surname: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Овог'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 1, \r\n                    maxLength: 20\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }, \r\n            firstname: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Нэр'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 1, \r\n                    maxLength: 20\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }, \r\n            registrationNumber: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Регистерийн дугаар'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 10, \r\n                    maxLength: 10, \r\n                    isRegistrationNumber: true\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }, \r\n            phoneNumber: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Утасны дугаар'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    minLength: 8, \r\n                    maxLength: 8, \r\n                    isNumeric: true\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }, \r\n            email: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'text', \r\n                    placeholder: 'Имэйл хаяг'\r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n\r\n                    isEmail: true\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }\r\n        }, \r\n        generalForm: {\r\n            agreeCheck: {\r\n                elementType: 'input', \r\n                elementConfig: {\r\n                    type: 'checkbox', \r\n                    checked: false, \r\n                  placeholder: 'I agree with the Terms and Conditions'  \r\n                }, \r\n                value: '', \r\n                validation: {\r\n                    required: true, \r\n                    isChecked: true\r\n                }, \r\n                valid: false, \r\n                touched: false\r\n            }\r\n        }\r\n    };\r\n\r\n    listHandler =(num)=>{\r\n        this.setState({selectedTab: num});\r\n       \r\n    }\r\n    checkValidity = (value, rule)=>{\r\n        if(!rule){\r\n            return true;\r\n        }\r\n        let isValid = true;\r\n        if(rule.required){\r\n          \r\n            if(rule.maxLength){\r\n                isValid = isValid && value.length <= rule.maxLength;\r\n            }\r\n            if(rule.minLength){\r\n                isValid = isValid && value.length >= rule.minLength;\r\n            }\r\n            if(rule.isNumeric){\r\n                const pattern = /^(0|[1-9][0-9]*)$/;\r\n                isValid = pattern.test(value) && isValid;\r\n            }\r\n            if(rule.isEmail){\r\n                const pattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n                isValid = pattern.test(value) & isValid;\r\n            }\r\n            if(rule.isRegistrationNumber){\r\n                const pattern = /^[A-ЯҮӨа-яүө]{2}[0-9]{8}$/;\r\n                isValid = pattern.test(value) & isValid;\r\n            }\r\n            \r\n        }\r\n        return isValid;\r\n    }\r\n    onChangeHandler =(event, id)=>{\r\n        let tempForm = null;\r\n        if(this.state.selectedTab ===1){\r\n            tempForm = {...this.state.vehicleForm};\r\n            tempForm[id].value = event.target.value;\r\n            tempForm[id].valid = this.checkValidity(event.target.value, tempForm[id].validation);\r\n            tempForm[id].touched = true;\r\n            console.log(tempForm[id].valid);\r\n            this.setState({vehicleForm: tempForm});\r\n\r\n        }else if (this.state.selectedTab ===2){\r\n            tempForm = {...this.state.userForm};\r\n            tempForm[id].value = event.target.value;\r\n            tempForm[id].valid = this.checkValidity(event.target.value, tempForm[id].validation);\r\n            tempForm[id].touched = true;\r\n            this.setState({userForm: tempForm});\r\n\r\n        } else{\r\n            tempForm = {...this.state.generalForm};\r\n            tempForm[id].elementConfig.checked = !tempForm[id].elementConfig.checked;\r\n            tempForm[id].touched = true;\r\n            tempForm[id].valid = tempForm[id].elementConfig.checked ? true: false;\r\n            this.setState({generalForm: tempForm});\r\n            console.log(this.state.generalForm.agreeCheck.elementConfig.checked);\r\n\r\n        }\r\n        \r\n    }\r\n    onSubmit =()=>{\r\n        //event.preventDefaults();\r\n        let tempForm = null;\r\n        if(this.state.selectedTab===1){\r\n            tempForm = {...this.state.vehicleForm};\r\n            let isValid = true;\r\n            for(let id in tempForm){\r\n                isValid = tempForm[id].valid && isValid;\r\n                tempForm[id].touched = true;\r\n                \r\n            }\r\n            this.setState({vehicleForm: tempForm});\r\n            console.log(isValid);\r\n            if(isValid){\r\n                this.listHandler(2);\r\n            }\r\n        }else if(this.state.selectedTab ===2){\r\n            tempForm = {...this.state.userForm};\r\n            let isValid = true;\r\n            for(let id in tempForm){\r\n                isValid = tempForm[id].valid && isValid;\r\n                \r\n            }\r\n            if(isValid){\r\n                this.listHandler(3);\r\n            }else{\r\n                for(let id in tempForm){\r\n                    tempForm[id].touched = true;\r\n                    \r\n                }\r\n                this.setState({userForm: tempForm});\r\n            }\r\n        }else {\r\n            tempForm = {...this.state.generalForm};\r\n            let isValid = true;\r\n            for(let id in tempForm){\r\n                isValid = tempForm[id].valid && isValid;\r\n                \r\n            }\r\n            if(isValid){\r\n                this.props.history.push('/');\r\n            }else{\r\n                // to do something when checkbox is not checked\r\n            }\r\n        }\r\n        \r\n    }\r\n    prevClicked =()=>{\r\n        if(this.state.selectedTab ===1){\r\n\r\n        }else if(this.state.selectedTab ===2){\r\n            this.listHandler(1);\r\n        }else {\r\n            this.listHandler(2);\r\n        }\r\n    }\r\n    render(){\r\n        let loadingPosition = this.state.selectedTab===1 ? '40%' : this.state.selectedTab ===2 ? '70%': '100%'; \r\n        let formElements = null;\r\n        if(this.state.selectedTab ===1){\r\n            formElements = {...this.state.vehicleForm};\r\n            \r\n        }else if(this.state.selectedTab ===2){\r\n            formElements = {...this.state.userForm};\r\n        }else {\r\n            formElements = {...this.state.generalForm};\r\n        }\r\n        const elementFormList = [];\r\n        for(let i in formElements){\r\n            elementFormList.push({ id: i, config: formElements[i]});\r\n        }\r\n        \r\n        \r\n        \r\n    \r\n    return(\r\n        <div className = {classes.Vehicle}>\r\n            <div className = {classes.Tab}>\r\n                <ul>\r\n                    <li onClick = {()=>this.listHandler(1)} className = {this.state.selectedTab === 1 ? classes.SelectedTab: classes.UnselectedTab}>\r\n                        <i className=\"mdi mdi-account-circle mr-1\"></i>\r\n                        <div className = {classes.TabText}>\r\n                            Тээврийн хэрэгслийн мэдээлэл\r\n                        </div>\r\n\r\n                    </li>\r\n                    <li onClick = {()=>this.listHandler(2)} className = {this.state.selectedTab === 2 ? classes.SelectedTab: classes.UnselectedTab}>\r\n                        <i className=\"mdi mdi-face-profile mr-1\"></i>\r\n                        <div className = {classes.TabText}>\r\n                            Даатгуулагчийн мэдээлэл\r\n                        </div>\r\n                    </li>\r\n                    <li onClick = {()=>this.listHandler(3)} className = {this.state.selectedTab === 3 ? classes.SelectedTab: classes.UnselectedTab}>\r\n                        <i className=\"mdi mdi-checkbox-marked-circle-outline mr-1\"></i>\r\n                        <div className = {classes.TabText}>\r\n                            Ерөнхий мэдээлэл\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n                <div className = {classes.VehicleContainer}> \r\n                    <div className={[classes.lines, classes.stripesLoader].join(' ')} style={{backgroundPosition: loadingPosition}}>\r\n                    </div>\r\n\r\n                </div>\r\n                <form className = {this.state.selectedTab ===3 ? classes.formReg: classes.formGeneral}>\r\n                    {\r\n                        this.state.selectedTab ===3 ? \r\n                            elementFormList.map(igkey=>{\r\n                                return(\r\n                                    <div key = {igkey.id} className = {classes.formElement}>\r\n                                        <label htmlFor={igkey.id}>{igkey.config.elementConfig.placeholder}</label>\r\n                                        <input className = {classes.textInput}\r\n                                        type={igkey.config.elementConfig.type}\r\n                                        placeholder ={igkey.config.elementConfig.placeholder}\r\n                                        onChange = {(event)=>this.onChangeHandler(event, igkey.id)} \r\n                                        checked = {igkey.config.elementConfig.checked}\r\n                                        />\r\n                                        \r\n\r\n                                    </div>    \r\n                                );\r\n                            })\r\n                        : \r\n                            elementFormList.map(igkey=>{\r\n                                return(\r\n                                    <div key = {igkey.id} className = {classes.formElement}>\r\n                                        <label htmlFor={igkey.id}>{igkey.config.elementConfig.placeholder}</label>\r\n                                        <input \r\n                                        className = {[classes.textInput,  igkey.config.valid && igkey.config.touched ? classes.textInputSuccess:  ((!igkey.config.valid) && igkey.config.touched? classes.textInputDanger: null) ].join(' ')}\r\n                                        type={igkey.config.elementConfig.type}\r\n                                        placeholder ={igkey.config.elementConfig.placeholder}\r\n                                        onChange = {(event)=>this.onChangeHandler(event, igkey.id)}\r\n                                        value = {igkey.config.value}\r\n                                        />\r\n                                        {(!igkey.config.valid)  && igkey.config.touched ? <strong className= \"mdi mdi-close\" style = {{color: 'red', fontSize: '20px'}}></strong>:  \r\n                                            null\r\n                                        }\r\n                                        \r\n                                        \r\n                                        {(igkey.config.valid) && igkey.config.touched ? <strong className= \"mdi mdi-check\" style = {{color: 'green', fontSize: '20px'}} ></strong>:  \r\n                                            null\r\n                                        }\r\n\r\n                                    </div>    \r\n                                );\r\n                            })\r\n                        \r\n                    }\r\n                    \r\n                </form>\r\n                <div className = {classes.prevNextcont}>\r\n                        <button className= {classes.Prev} onClick = {this.prevClicked}>Prev</button>\r\n                        <button className = {classes.Next} onClick = {this.onSubmit}>Next</button>\r\n                    </div>\r\n                \r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n    }\r\n}\r\nexport default Vehicle;"]},"metadata":{},"sourceType":"module"}